name: Publish windows wheels

on:
  push:
      #tags:
      #  - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  CIBW_BUILD_VERBOSITY: 3
  CIBW_BUILD: 'cp38-win_amd64' #XXX
  #CIBW_BUILD: 'cp3?-win_amd64'
  CIBW_SKIP: 'cp35-*'

  CIBW_BEFORE_BUILD: pip install ninja cmake

  CIBW_BEFORE_TEST: pip install -r {project}/tests/requirement_tests.txt
  CIBW_TEST_COMMAND: cd {project}\tests && dir && nosetests -s -v .

jobs:
  build:
    name: build-windows
    runs-on: windows-latest

    steps:
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: check and install HDF5
        shell: cmd
        run: |
          python -m pip install h5py
          python -c "import h5py; v='1.12.0'; assert v == h5py.version.hdf5_version, f'{v} != {h5py.version.hdf5_version}'"
          curl -O https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.12/hdf5-1.12.0/bin/hdf5-1.12.0-Std-win10_64-vs16.zip
          C:\windows\system32\tar.exe xf hdf5-1.12.0-Std-win10_64-vs16.zip
          start /wait msiexec /a "%cd%\hdf\HDF5-1.12.0-win64.msi" /qn TARGETDIR="c:\hdf5\"

      - uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: Install cibuildwheel and dependencies
        run: |
          python -m pip install cibuildwheel ninja cmake

      - name: Build wheels windows
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          set HDF5_DIR=C:\hdf5\HDF_Group\HDF5\1.12.0\cmake
          python -m cibuildwheel --output-dir dist

      - name: Store wheel as artifact
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
